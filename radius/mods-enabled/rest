rest {
    tls {
        verify_cert = yes
        #verify_cert_cn = yes
        cacertdir = /etc/raddb/certs
        cacertfile = comodoCA.pem
        private_key_password = whatever
        private_key_file = ${cacertdir}/client.key
        certificate_file = ${cacertdir}/client.pem
    }

    authorisation_api_base_url = "$ENV{AUTHORISATION_API_BASE_URL}"
    logging_api_base_url = "$ENV{LOGGING_API_BASE_URL}"

    authorize {
        uri = "${..authorisation_api_base_url}/authorize/user/%{User-Name}/mac/%{Calling-Station-ID}/ap/%{Called-Station-ID}/site/%{Client-IP-Address}/apg/%{Aruba-AP-Group}/mdn/%{Meraki-Device-Name}"
        method = 'get'
        body = 'json'
        tls = ${..tls}
    }

    authenticate {
      noop
    }

    accounting {
      noop
    }

    post-auth {
        uri = "${..logging_api_base_url}/logging/post-auth"
        method = 'post'
        data = '{ "username": "%{User-Name}", "mac": "%{Calling-Station-ID}", "called_station_id": "%{Called-Station-ID}", "site_ip_address": "%{Client-IP-Address}", "cert_name": "%{TLS-Client-Cert-Common-Name}", "authentication_result": "%{reply:Packet-Type}" }'
        body = 'json'
        tls = ${..tls}
    }

    pool {
        start = ${thread[pool].start_servers}

        min = ${thread[pool].min_spare_servers}

        max = ${thread[pool].max_servers}

        spare = ${thread[pool].max_spare_servers}

        uses = 0

        retry_delay = 30

        lifetime = 0

        idle_timeout = 60
    }
}
